#BlueJ class context
comment0.params=texto
comment0.target=boolean\ esLetra(java.lang.String)
comment0.text=\n\ M\uFFFDtodo\ que\ determina\ si\ un\ texto\ contiene\ una\n\ sola\ letra.\n\ \n\ @param\ texto\ Texto\ a\ comprobar\ si\ contiene\ una\ sola\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ letra.\n\ @return\ \ \ \ \ \ <code>true</code>\ en\ caso\ de\ que\ el\ texto\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ contenga\ una\ sola\ letra\ o\ <code>false</code>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ en\ caso\ contrario.\n
comment1.params=textoCompleto\ letra
comment1.target=int\ cuentaRepeticiones(java.lang.String,\ java.lang.String)
comment1.text=\n\ M\uFFFDtodo\ que\ cuenta\ las\ repeticiones\ de\ una\ letra\ en\ un\n\ texto.\n\ \n\ @param\ textoCompleto\ Texto\ del\ que\ contar\ las\ repeticiones\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ de\ la\ letra.\n\ @param\ letra\ \ \ \ \ \ \ \ \ Letra\ de\ la\ que\ contar\ sus\ repeticiones.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\uFFFDmero\ de\ repeticiones\ de\ la\ letra\ en\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ texto.\n\ @throws\ CompresorException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ En\ caso\ de\ que\ el\ texto\ contenga\ una\ sola\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ letra.\n
comment10.params=texto
comment10.target=java.lang.String\ codificacionTextoEnBinario(java.lang.String)
comment10.text=\n\ M\uFFFDtodo\ que\ obtiene\ la\ representaci\uFFFDn\ gr\uFFFDfica\ del\ texto\n\ codificado\ en\ binario.\n\ \n\ @param\ texto\ Texto\ del\ que\ obtener\ su\ representaci\uFFFDn\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ gr\uFFFDfica\ en\ binario.\n\ @return\ \ \ \ \ \ La\ representaci\uFFFDn\ gr\uFFFDfica\ del\ texto\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ codificado\ en\ binario.\n
comment11.params=a
comment11.target=java.lang.String\ booleanVectorToString(java.util.Vector)
comment11.text=\n\ M\uFFFDtodo\ que\ obtiene\ la\ representaci\uFFFDn\ binaria\ del\ vector\ de\n\ booleanos\ que\ codifica\ un\ texto.\n\ \n\ @param\ a\ Vector\ de\ booleanos\ que\ codifica\ un\ texto.\n\ @return\ \ Representaci\uFFFDn\ binaria\ del\ vector\ de\ booleanos.\n
comment12.params=alfabeto\ arbol
comment12.target=Diccionario\ construirDiccionarioDesdeArbol(java.lang.String,\ Tree)
comment12.text=\n\ M\uFFFDtodo\ que\ construye\ el\ diccionario\ una\ vez\ hecho\ el\ \uFFFDrbol.\n\ \n\ @param\ alfabeto\ Alfabeto\ a\ partir\ del\ que\ construir\ el\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ diccionario.\n\ @param\ arbol\ \ \ \ \uFFFDrbol\ de\ frecuencias\ y\ letras.\n\ @return\ \ \ \ \ \ \ \ \ El\ diccionario\ del\ \uFFFDrbol\ y\ del\ alfabeto.\n
comment2.params=textoCompleto\ letra
comment2.target=int\ cuentaRepeticiones(java.lang.String,\ char)
comment2.text=\n\ M\uFFFDtodo\ que\ cuenta\ las\ repeticiones\ de\ una\ letra\ en\ un\n\ texto.\n\ \n\ @param\ textoCompleto\ Texto\ del\ que\ contar\ las\ repeticiones\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ de\ la\ letra.\n\ @param\ letra\ \ \ \ \ \ \ \ \ Letra\ de\ la\ que\ contar\ sus\ repeticiones.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\uFFFDmero\ de\ repeticiones\ de\ la\ letra\ en\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ texto.\n
comment3.params=cadena\ letra
comment3.target=boolean\ letraEnCadena(java.lang.String,\ char)
comment3.text=\n\ M\uFFFDtodo\ que\ determina\ si\ una\ letra\ est\uFFFD\ en\ la\ cadena.\n\ \n\ @param\ cadena\ Cadena\ a\ comprobar.\n\ @param\ letra\ \ Letra\ a\ comprobar\ si\ est\uFFFD\ en\ la\ cadena.\n\ @return\ \ \ \ \ \ \ <code>true</code>\ si\ la\ letra\ est\uFFFD\ en\ la\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ cadena\ y\ <code>false</code>\ en\ caso\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ contrario.\n
comment4.params=textoCompleto
comment4.target=java.lang.String\ obtenerAlfabeto(java.lang.String)
comment4.text=\n\ M\uFFFDtodo\ que\ obtiene\ el\ alfabeto\ de\ un\ texto.\n\ \n\ @param\ textoCompleto\ Texto\ del\ que\ obtener\ su\ alfabeto.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ alfabeto\ del\ texto.\n
comment5.params=texto
comment5.target=java.util.Vector\ obtenerComponentes(java.lang.String)
comment5.text=\n\ M\uFFFDtodo\ que\ hace\ un\ vector\ con\ \uFFFDrboles\ de\ letras\ y\ frecuencias\n\ a\ partir\ del\ texto.\ El\ vector\ puede\ estar\ desordenado.\n\ \n\ @param\ texto\ Texto\ del\ que\ hacer\ un\ vector\ de\ \uFFFDrboles\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ y\ frecuencias.\n\ @return\ \ \ \ \ \ El\ vector\ con\ \uFFFDrboles\ y\ frecuencias.\n
comment6.params=desordenado
comment6.target=java.util.Vector\ ordenarMenorAMayorComponentes(java.util.Vector)
comment6.text=\n\ M\uFFFDtodo\ que\ ordena\ el\ vector\ de\ \uFFFDrboles\ de\ letras\ y\ frecuencias\n\ de\ menor\ a\ mayor.\n\ \n\ @param\ desordenado\ Vector\ de\ \uFFFDrboles\ y\ frecuencias\ a\ ordenar.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ El\ vector\ de\ \uFFFDrboles\ y\ frecuencias\ ordenado.\n
comment7.params=componentes
comment7.target=java.lang.String\ componentesToString(java.util.Vector)
comment7.text=\n\ M\uFFFDtodo\ que\ da\ la\ representaci\uFFFDn\ gr\uFFFDfica\ de\ los\ componentes\n\ del\ vector.\n\ \n\ @param\ componentes\ Componentes\ de\ los\ que\ obtener\ su\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ representaci\uFFFDn\ gr\uFFFDfica.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ La\ representaci\uFFFDn\ gr\uFFFDfica\ de\ los\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ componentes\ del\ vector.\n
comment8.params=componentesOrdenados
comment8.target=Tree\ crearArbolDeCodigos(java.util.Vector)
comment8.text=\n\ M\uFFFDtodo\ que\ crea\ el\ \uFFFDrbol\ de\ c\uFFFDdigos\ a\ partir\ del\ vector\n\ ordenado\ de\ \uFFFDrboles\ con\ frecuencias\ y\ letras.\n\ \n\ @param\ componentesOrdenados\ Vector\ del\ que\ crear\ su\ \uFFFDrbol\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ de\ c\uFFFDdigos.\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ \uFFFDrbol\ de\ c\uFFFDdigos\ del\ vector\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ordenado\ de\ \uFFFDrboles.\n
comment9.params=texto\ dicc
comment9.target=java.util.Vector\ comprime(java.lang.String,\ Diccionario)
comment9.text=\n\ M\uFFFDtodo\ que\ comprime\ el\ texto\ utilizando\ el\ diccionario\ y\ lo\n\ obtiene\ en\ un\ vector\ de\ booleanos.\n\ \n\ @param\ texto\ Texto\ a\ comprimir.\n\ @param\ dicc\ \ Diccionario\ con\ que\ comprimir\ el\ texto.\n\ @return\ \ \ \ \ \ El\ vector\ de\ booleanos\ (representaci\uFFFDn\ binaria)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ del\ texto\ comprimido.\n
numComments=13
